{"mappings":"kpBAsBA,IAAAA,EACAC,E,iJArBA,IAAIC,EAAU,GAoBdF,EAlBA,SAAkBG,GAGhB,IAFA,IAAIC,EAAOC,OAAOD,KAAKD,GAEdG,EAAI,EAAGA,EAAIF,EAAKG,OAAQD,IAC/BJ,EAAQE,EAAKE,IAAMH,EAAMC,EAAKE,G,EAelCL,EAXA,SAAiBO,GACf,IAAIC,EAAWP,EAAQM,GAEvB,GAAgB,MAAZC,EACF,MAAM,IAAIC,MAAM,oCAAsCF,GAGxD,OAAOC,C,KCnBTE,EAAA,SAAAC,SAA8CC,KAAKC,MAAM,sH,MCAzDC,EAAiB,IAAAC,IAAoBL,EAAA,SAAAM,QAA6C,SAAQC,OAAAC,KAAAC,KAAEC,WCArF,MCIDC,EAAcC,SAASC,cAAc,gBACrCC,EAAcF,SAASC,cAAc,iBAE3CF,EAAYI,iBAAiB,UAE7B,SAAsBC,GAClBA,EAAMC,iBAkBVC,eAA6BC,GACzB,MAAMC,EAAqBD,EAC3B,IAC+B,KAAvBC,GACAC,MAAM,qCAWlB,SAAuBC,GAEnBR,EAAYS,UAAY,GAExB,MACMC,EADOF,EAAYG,QACDC,KAAIC,IAExB,MAAMC,EAAaD,EAAQE,MAAMC,cAEjC,IAAIC,EAAcC,EAAA5B,GAKlB,OAJIuB,EAAQM,cACRF,EDpDW,kCCoDaJ,EAAQM,aAG7B,kDACgCN,EAAQ9B,oDACVkC,WAAqBJ,EAAQE,sFAElCD,gDACAD,EAAQO,qDAElC,IAGVpB,EAAYS,UAAYC,EAAWW,KAAK,G,CAhCpCC,OAnBRlB,eAAgCmB,GAC5B,IACI,MAAMC,QAAiBC,MACnB,2GAA0DF,yBAG9D,OADaC,EAASE,M,CAExB,MAAOC,GACLC,QAAQC,IAAI,eAAgBF,E,EAULG,CAAiBxB,G,CAG1C,MAAOqB,GACLC,QAAQC,IAAI,eAAgBF,EAAMI,Q,EAzBtCC,CAFiB9B,EAAM+B,cAAcC,SAASC,YAAYC,MAAMC,O","sources":["node_modules/@parcel/runtime-js/lib/helpers/bundle-manifest.js","node_modules/@parcel/runtime-js/lib/runtime-e41052338e14d686.js","node_modules/@parcel/runtime-js/lib/runtime-f140e86861427946.js","src/js/fetch-data.js","src/js/with_search-field.js"],"sourcesContent":["\"use strict\";\n\nvar mapping = {};\n\nfunction register(pairs) {\n  var keys = Object.keys(pairs);\n\n  for (var i = 0; i < keys.length; i++) {\n    mapping[keys[i]] = pairs[keys[i]];\n  }\n}\n\nfunction resolve(id) {\n  var resolved = mapping[id];\n\n  if (resolved == null) {\n    throw new Error('Could not resolve bundle with id ' + id);\n  }\n\n  return resolved;\n}\n\nmodule.exports.register = register;\nmodule.exports.resolve = resolve;","require('./helpers/bundle-manifest').register(JSON.parse(\"{\\\"7J3zI\\\":\\\"with_search-field.98de117f.js\\\",\\\"7WMlA\\\":\\\"no-poster_CUT.05bb0fec.jpeg\\\"}\"));","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"7WMlA\")).toString();","export const KEY = '0e67fb79d752f59394a3aa358d9abf8d';\nexport const URL = 'https://api.themoviedb.org/3/';\nexport const IMG_URL = 'https://image.tmdb.org/t/p/w500';","\nimport noPosterCUT from '../images/no-poster_CUT.jpeg';\nimport { KEY, URL, IMG_URL } from './fetch-data';\n\nconst contentForm = document.querySelector('#search-form');\nconst contentList = document.querySelector('.content-list');\n\ncontentForm.addEventListener('submit', onformSubmit)\n\nfunction onformSubmit(event) {\n    event.preventDefault();\n    let searchData = event.currentTarget.elements.searchQuery.value.trim();\n    //console.log(\"search result \", searchData)\n    renderContent(searchData)\n}\n\nasync function fetchMainContent(querry) {\n    try {\n        const response = await fetch(\n            `${URL}search/movie?api_key=${KEY}&language=en-US&query=${querry}&include_adult=false`\n        );\n        const data = response.json();\n        return data;\n    } catch (error) {\n        console.log(\" ERROR ! -> \", error)\n    }\n}\n\nasync function renderContent(searchDataFromForm) {\n    const dataOfSearchQuerry = searchDataFromForm;\n    try {\n        if (dataOfSearchQuerry === '') {\n            alert(\"Error : Search Field ist Leer ! \")\n        }\n        const mainData = await fetchMainContent(dataOfSearchQuerry);\n        createContent(mainData);\n\n    } catch (error) {\n        console.log(\" ERROR ! -> \", error.message)\n    }\n}\n\n\nfunction createContent(arrayOfData) {\n\n    contentList.innerHTML = '';\n\n    const data = arrayOfData.results\n    const setOfCards = data.map(element => {\n\n        const movieTitle = element.title.toUpperCase();\n\n        let moviePoster = noPosterCUT;\n        if (element.poster_path) {\n            moviePoster = IMG_URL + element.poster_path;\n        }\n\n        return `\n         <li class=\"card-container\" data-id=\"${element.id}\">\n            <img class=\"image-poster\" src=\"${moviePoster}\" alt=\"${element.title}\"  />\n            <div class=\"info\"> \n                <p class=\"movie-data\">${movieTitle}</p>\n                <p class=\"movie-data\">${element.release_date}</p>\n            </div>\n        </li>`;\n    });\n\n    contentList.innerHTML = setOfCards.join('');\n}\n\n"],"names":["$ef7689007096c8a0$export$6503ec6e8aabbaf","$ef7689007096c8a0$export$f7ad0328861e2f03","$ef7689007096c8a0$var$mapping","pairs","keys","Object","i","length","id","resolved","Error","parcelRequire","register","JSON","parse","$4809b259660e77a2$exports","URL","resolve","import","meta","url","toString","$c94a006359f66c0a$var$contentForm","document","querySelector","$c94a006359f66c0a$var$contentList","addEventListener","event","preventDefault","async","searchDataFromForm","dataOfSearchQuerry","alert","arrayOfData","innerHTML","setOfCards","results","map","element","movieTitle","title","toUpperCase","moviePoster","$parcel$interopDefault","poster_path","release_date","join","$c94a006359f66c0a$var$createContent","querry","response","fetch","json","error","console","log","$c94a006359f66c0a$var$fetchMainContent","message","$c94a006359f66c0a$var$renderContent","currentTarget","elements","searchQuery","value","trim"],"version":3,"file":"with_search-field.98de117f.js.map"}